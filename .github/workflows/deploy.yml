name: Build and Deploy to FTP

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          # Add any environment variables needed for build
          VITE_API_URL: ${{ secrets.VITE_API_URL }}

      - name: Deploy to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: /weather/front/
          dangerous-clean-slate: false
          protocol: ftp
          security: loose
          timeout: 900000
          log-level: verbose

      - name: Send Discord Success Notification
        if: success()
        env:
          COMMIT_MSG: ${{ github.event.head_commit.message }}
          AUTHOR: ${{ github.event.head_commit.author.name }}
        run: |
          COMMIT_SHORT="${GITHUB_SHA:0:7}"
          COMMIT_TITLE=$(echo "$COMMIT_MSG" | head -n 1)

          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{
                 \"embeds\": [{
                   \"title\": \"✅ Deployment Successful\",
                   \"description\": \"**Weather App** deployed successfully to production!\",
                   \"color\": 3066993,
                   \"fields\": [
                     {
                       \"name\": \"Repository\",
                       \"value\": \"[${{ github.repository }}](https://github.com/${{ github.repository }})\",
                       \"inline\": true
                     },
                     {
                       \"name\": \"Branch\",
                       \"value\": \"\`${{ github.ref_name }}\`\",
                       \"inline\": true
                     },
                     {
                       \"name\": \"Commit\",
                       \"value\": \"[\`${COMMIT_SHORT}\`](https://github.com/${{ github.repository }}/commit/${{ github.sha }})\",
                       \"inline\": false
                     },
                     {
                       \"name\": \"Commit Message\",
                       \"value\": \"${COMMIT_TITLE}\",
                       \"inline\": false
                     },
                     {
                       \"name\": \"Author\",
                       \"value\": \"${AUTHOR}\",
                       \"inline\": true
                     },
                     {
                       \"name\": \"Workflow\",
                       \"value\": \"[${{ github.workflow }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\",
                       \"inline\": true
                     }
                   ],
                   \"timestamp\": \"${{ github.event.head_commit.timestamp }}\"
                 }]
               }" \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Send Discord Failure Notification
        if: failure()
        env:
          COMMIT_MSG: ${{ github.event.head_commit.message }}
          AUTHOR: ${{ github.event.head_commit.author.name }}
        run: |
          COMMIT_SHORT="${GITHUB_SHA:0:7}"
          COMMIT_TITLE=$(echo "$COMMIT_MSG" | head -n 1)

          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{
                 \"embeds\": [{
                   \"title\": \"❌ Deployment Failed\",
                   \"description\": \"**Weather App** deployment failed!\",
                   \"color\": 15158332,
                   \"fields\": [
                     {
                       \"name\": \"Repository\",
                       \"value\": \"[${{ github.repository }}](https://github.com/${{ github.repository }})\",
                       \"inline\": true
                     },
                     {
                       \"name\": \"Branch\",
                       \"value\": \"\`${{ github.ref_name }}\`\",
                       \"inline\": true
                     },
                     {
                       \"name\": \"Commit\",
                       \"value\": \"[\`${COMMIT_SHORT}\`](https://github.com/${{ github.repository }}/commit/${{ github.sha }})\",
                       \"inline\": false
                     },
                     {
                       \"name\": \"Commit Message\",
                       \"value\": \"${COMMIT_TITLE}\",
                       \"inline\": false
                     },
                     {
                       \"name\": \"Author\",
                       \"value\": \"${AUTHOR}\",
                       \"inline\": true
                     },
                     {
                       \"name\": \"Workflow\",
                       \"value\": \"[View Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\",
                       \"inline\": true
                     }
                   ],
                   \"timestamp\": \"${{ github.event.head_commit.timestamp }}\"
                 }]
               }" \
               ${{ secrets.DISCORD_WEBHOOK_URL }}
